// TODO: Review SCSS modules and refactor duplicate code into mixins.

// Containers & Sections
// @mixin homeSection($height: 100vh, $full: false) {
@mixin homeSection($height: auto, $full: false) {
  position: relative;
  height: $height;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  isolation: isolate;
  // margin-bottom: var(--intersection-margin);
  @media (max-width: 1024px) {
    margin-top: var(--browser-bar);
    margin-bottom: var(--task-bar);
    @if $full {
      margin: 0 !important; 
    }
  }
}
@mixin fullBleedContent {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 100%;
  width: 100vw;
}

// Typography
@mixin heroText {
  font-family: var(--font-title);
  font-size: var(--text-hero);
}
@mixin largeHeaderText {
  font-family: var(--font-title);
  font-size: var(--text-header-xl);
}
@mixin headerText($color: var(--primary)) {
  font-family: var(--font-subtitle);
  font-size: var(--text-header-sm);
  letter-spacing: var(--push-ms);
  color: $color;
}
@mixin subheaderText {
  font-family: var(--font-subtitle);
  font-size: var(--text-subheader);
  color: var(--primary);
}
@mixin paragraphText {
  font-family: var(--font-body);
  font-size: var(--text-prose);
  @media (max-width: 1024px) {
    font-size: var(--text-prose-em);
    line-height: var(--text-xl);
    line-height: 150%;
  }
}
@mixin btnText {
  font-size: var(--text-prose);
  letter-spacing: var(--push-ms);
}
@mixin smallLabelText($color: var(--text-color-med)) {
  font-size: var(--text-sm);
  font-weight: var(--reg);
  text-transform: uppercase;
  letter-spacing: var(--push-md);
  color: $color;
}
@mixin linkText {
  font-size: var(--text-prose-em);
  font-weight: var(--body);
}

// Elements
@mixin inputStyle {
  padding: var(--space-lg) var(--space-sm);
  font-size: var(--text-prose);
  font-weight: var(--reg);
  letter-spacing: var(--push-ms);
  background-color: transparent;
  outline: none;
  border: none;
  border-bottom: 1px solid currentColor;
}
@mixin fadeTransitionBar($height: 17.5vh, $vOffset: -1vh, $top: false, $color: var(--primary-bg)) {
  position: absolute;
  bottom: $vOffset;
  width: 100%;
  height: $height;
  background: linear-gradient(to bottom, transparent 0%, $color 70%);
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.3;
    background-image: url("/noise-bg.png");
    height: 100%;
    width: 100%;
  }
  @if $top {
    bottom: unset;
    background: linear-gradient(to top, transparent 0%, $color 70%);
    top: $vOffset;
  }
}
@mixin gradientShade {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to left, hsla(var(--papaya-hsl), 50%), hsla(var(--river-hsl), 65%));
}

@mixin sectionLabel($top: 10vh) {
  font-family: var(--font-thin);
  position: absolute;
  top: $top;
  left: -50vw;
  width: 200vw;
  font-size: 152px;
}

@mixin waveCircles {
  position: absolute;
  top: calc(-0.25 * var(--space-2xl));
  left: calc(-1 * var(--space-2xl));
  display: flex;
  height: min(128px, 17vh);
  width: min(128px, 17vh);
  svg {
    height: 100%;
    width: 100%;
  }
}

// Pseudoelements
@mixin shade($bgColor: var(--black-fade-20)) {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: $bgColor;
}

// Flex
@mixin flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}
